<?xml version="1.0" encoding="UTF-8"?>

<terms>
	<entry name="Aggiornamento in place">
		Questo tipo di aggiornamento sostituisce valori già presenti con valori nuovi e aggiornati.
	</entry>

	<entry name="Aggiornamento movie">
		L'aggiornamento movie combina i due metodi di aggiornamento \insglo{in place} e \insglo{stream}, permettendo di gestire la transizione della rappresentazione del grafico in due momenti successivi. Questo metodo di aggiornamento permette di:
		\begin{itemize}
			\item sostituire i valori già rappresentati;
			\item aggiungere nuovi valori al grafico;
			\item togliere valori rappresentati nel grafico.
		\end{itemize}
	</entry>

	<entry name="Aggiornamento stream">
		L’\insglo{aggiornamento stream} aggiunge nuovi valori al grafico. Il grafico mantiene la visualizzazione dei dati già presenti, aggiungendo nuove rappresentazioni grafiche per i nuovi dati aggiunti.
	</entry>

	<entry name="Android">
		È un sistema operativo open source per dispositivi mobili sviluppato da Google.
	</entry>

	<entry name="Angular.js">
		Angular.js è un framework JavaScript utile a semplificare la realizzazione di applicazioni Web single page. Si tratta di un template-engine lato client che implementa il pattern MVC.
	</entry>

	<entry name="Aspell">
		Strumento di correzione ortografica multilingue.
	</entry>

	<entry name="Astah">
		Astah, formalmente conosciuto come JUDE (Java and UML Developer's Environment), è uno strumento per la modellazione di diagrammi UML. Fra le varie funzionalità, questo software supporta la creazione di: diagrammi delle classi, diagrammi dei casi d'uso, diagrammi delle attività, diagrammi di sequenza e diagrammi dei componenti.
	</entry>
	
	<entry name="API">
		Acronimo di "Application Programming Interface". Si tratta di \insglo{procedure} disponibili al programmatore, utili per l'implementazione di un certo compito all'interno di un programma.
	</entry>

	<entry name="Bar Chart">
		Grafico a barre rettangolari di lunghezza proporzionale al valore che rappresentano. Le barre possono essere orientate verticalmente od orizzontalmente e vengono utilizzate per mostrare confronti tra categorie. Un asse del grafico mostra le categorie specifiche confrontate, e l'altro asse rappresenta un valore discreto.
	</entry>

	<entry name="Best Practice">
		Con "Best Practice" si intendono tutte quelle tecniche e modi di agire che, se applicate costantemente, portano a risultati migliori rispetto a quelli ottenuti se non venissero applicate. Le "Best Practice" sono in continua evoluzione perchè sono ampliate ogni volta che viene scoperto un miglioramento.
	</entry>

	<entry name="BitBucket">
		Servizio web di hosting per lo sviluppo di progetti software che usa i sistemi di controllo di versione \insglo{Git} e \insglo{Mercurial}.
	</entry>

	<entry name="Browser">
		Programma che consente di usufruire dei servizi di connettività in Internet, o di una rete di computer.
	</entry>

	<entry name="Capitolato">
		Documento tecnico, in genere allegato ad un contratto di appalto, che vi fa riferimento per definire in quella sede le specifiche tecniche delle opere che andranno ad eseguirsi per effetto del contratto stesso.
	</entry>

	<entry name="Chart.js">
		Libreria \insglo{JavaScript} open source per la realizzazione di grafici in HTML5.
	</entry>

	<entry name="Chrome">
		\insglo{Browser} web sviluppato da Google.
	</entry>

	<entry name="Client">
		Componente di un sistema informatico che accede ai servizi o alle risorse di un’altra componente del sistema, detta \insglo{server}.
	</entry>
	
	<entry name="Cloud Storage">
		Modello di conservazione dati su computer in rete dove i dati stessi sono memorizzati su molteplici \insglo{server} virtuali, generalmente ospitati presso strutture di terze parti o su \insglo{server} dedicati.
	</entry>
	
	<entry name="CMM">
		Il Capability Maturity Model (CMM) è un modello di sviluppo creato in seguito allo studio dei dati collezionati dalle organizzazioni di ricerca sovvenzionate dal Dipartimento della Difesa Statunitense. Il termine "capability" si riferisce alla misura dell'adeguatezza del processo  rispetto agli scopi per cui è stato definito. Il termine "maturity", invece, è legato al grado di formalità e ottimizzazione dei processi, proveniente da best practice, e riguarda in particolare la definizione formale delle fasi, la gestione dei risultati delle misure e l'ottimizzazione attiva dei processi.
	</entry>
	
	<entry name="Dashboard">
		Nei sistemi di gestione dell'informazione, una dashboard è una interfaccia ad aggiornamento in tempo reale che mostra presentazioni grafiche dello stato corrente e di andamenti temporali di indicatori strategici per le performance organizzative, per consentire di avere una visione immediata della situazione.
	</entry>
	
	<entry name="Database">
		È una base di dati, cioè un archivio o un insieme di archivi contenenti informazioni strutturate e collegate tra loro secondo un particolare modello logico (relazionale, gerarchico, a oggetti, etc.), offrendo una gestione efficiente dei dati che vi sono contenuti.
	</entry>
	
	<entry name="Debugger">
		 Software specificatamente progettato per l'analisi e l'eliminazione dei bug, ovvero errori di programmazione interni al codice di altri programmi.
	</entry>
	
	<entry name="Design Pattern">
		Soluzione progettuale generale ad un problema ricorrente.
	</entry>
	
	<entry name="Diagramma di Gantt">
		Il diagramma di Gantt è uno strumento di supporto alla gestione dei progetti. Usato principalmente nelle attività di project management, è costruito partendo da un asse orizzontale, usato per rappresentare l'arco temporale totale del progetto, suddiviso in fasi incremental, e da un asse verticale, usato per rappresentare delle mansioni o attività che costituiscono il progetto.
		Un diagramma di Gantt permette dunque la rappresentazione grafica di un calendario di attività, utile al fine di pianificare, coordinare e tracciare specifiche attività in un progetto dando una chiara illustrazione dello stato d'avanzamento del progetto rappresentato.
	</entry>
	
	<entry name="Dropbox">
		Servizio di \insglo{cloud storage} multipiattaforma, che offre un servizio di \insglo{file hosting} e sincronizzazione automatica di file tramite web.
	</entry>
	<entry name="Facebook">
		Servizio di rete sociale che offre diversi servizi di messaggistica privata, tra cui una chat.
	</entry>
	<entry name="Fase">
		Nei documenti del progetto Norris, e in generale nell'ambito dell'ingegneria del software, per fase si intende un segmento temporale che cattura stati e/o transizioni di un ciclo di vita.
	</entry>
	
	<entry name="File Hosting">
		Servizio di archiviazione su Internet, appositamente progettato per ospitare i file degli utenti. Solitamente il servizio viene utilizzato per la condivisione di file, che possono essere scaricati anche da altri utenti.
	</entry>
	
	<entry name="Firefox">\insglo{Browser} web.</entry>

	<entry name="Framework">
		Architettura logica di supporto (spesso un'implementazione logica di un particolare \insglo{design pattern}) su cui un software può essere progettato e realizzato, spesso facilitandone lo sviluppo da parte del programmatore. Alla base di un framework c'è sempre una serie di librerie di codice utilizzabili in fase di linking con uno o più linguaggi di programmazione, spesso corredate da una serie di strumenti di supporto allo sviluppo del software, come ad esempio un \insglo{IDE}, un \insglo{debugger} o altri strumenti ideati per aumentare la velocità di sviluppo del prodotto finito. L'utilizzo di un framework impone dunque al programmatore una precisa metodologia di sviluppo del software.
	</entry>
	
	<entry name="Front end">
		Parte di un sistema software che gestisce l'interazione con l'utente o con sistemi esterni che producono dati di ingresso.
	</entry>
	<entry name="Event-driven">
		Il modello event-driven, o "programmazione ad eventi", si basa su un concetto piuttosto semplice: un'azione viene effettuata in seguito al verificarsi di eventi esterni. Ogni azione quindi risulta asincrona, a differenza dei pattern di programmazione più comuni, in cui un'azione succede ad un'altra solo dopo che essa è stata completata.
	</entry>

	<entry name="Express.js">
		\insglo{Framework} di Node.js che facilita la creazione di applicazioni web, fornendo una maggiore astrazione.
	</entry>
	
	<entry name="GanttProject">
		GanttProject è software open source multipiattaforma, implementato in Java, per la gestione dei progetti. Fra le sue funzioni principali rientrano la creazione dei diagrammi di Gantt e di Pert per la schedulazione dei compiti nei progetti.
	</entry>
	
	<entry name="Git">
		Sistema software di controllo di versione distribuito, utilizzabile da riga di comando.
	</entry>
	
	<entry name="GitHub">
		Servizio web di hosting per lo sviluppo di progetti software che usa il sistema di controllo di versione \insglo{Git}. GitHub offre diversi piani per repository privati sia a pagamento, sia gratuiti, molto utilizzati per lo sviluppo di progetti \insglo{open source}.
	</entry>

	<entry name="Header">Intestazione</entry>

	<entry name="HTML5">
		L'HTML5 è un linguaggio di markup per la strutturazione delle pagine web divenuto standard W3C nell'ottobre 2014.
	</entry>

	<entry name="HTTP">
		L'HyperText Transfer Protocol (HTTP), letteralmente "protocollo di trasferimento di un ipertesto", è usato come principale sistema per la trasmissione di informazioni sul web, ovvero in un'architettura tipica client-server. Le specifiche del protocollo sono gestite dal World Wide Web Consortium (W3C). Un \insglo{server} HTTP generalmente resta in ascolto delle richieste dei \insglo{client} sulla porta 80 usando il protocollo \insglo{TCP} a livello di trasporto.
	</entry>

	<entry name="IDE">
		Un Integrated Development Environment, letteralmente ambiente di sviluppo integrato, fornisce un insieme di strumenti di ausilio alla programmazione quali un editor, un compilatore e/o interprete e un \insglo{debugger}.
	</entry>

	<entry name="Indice Gulpease">
		L'Indice Gulpease è un indice di leggibilità di un testo tarato sulla lingua italiana. Rispetto ad altri ha il vantaggio di utilizzare la lunghezza delle parole in lettere anziché in sillabe, semplificandone il calcolo automatico.
	</entry>

	<entry name="Inspection">
		Tecnica di analisi statica basata sulla lettura mirata dei documenti/codice in cerca di errori specifici.
	</entry>

	<entry name="Issue">
		Unità di lavoro per realizzare un miglioramento in un progetto software. Un issue potrebbe essere un bug, una funzione richiesta, un compito, una documentazione mancante e così via.
	</entry>

	<entry name="JavaScript">
		Linguaggio di programmazione interpretato, generalmente utilizzato nella gestione degli eventi. Implementa un paradigma basato sia sugli oggetti che sulla programmazione funzionale.
	</entry>

	<entry name="JSON">
		JSON, acronimo di JavaScript Object Notation, è un formato per lo scambio dei dati in applicazioni client-server basato sul linguaggio JavaScript.
	</entry>

	<entry name="Latex">
		Li\insglo{nguaggio di markup}, basato sul principio WYSIWYM (What You See Is What You Mean), e utilizzato per la composizione di testi. Si presta particolarmente alla stesura di documenti tecnici molto lunghi, in modo concorrente, da parte di persone diverse.
	</entry>

	<entry name="Line Chart">
		Tipo di grafico che visualizza informazioni come una serie di punti di dati, denominati 'marker', collegati da segmenti rettilinei. Si tratta di un tipo di grafico comune in molti campi. È simile a un grafico a dispersione salvo che i punti di misurazione sono ordinati (tipicamente dal loro valore asse x) e uniti con una linea spezzata. Il Line Chart mostra come un dato particolare cambi ad intervalli uguali di tempo. E' spesso utilizzato per visualizzare una tendenza nei dati su intervalli di tempo (una serie storica), così la linea è spesso tracciata cronologicamente.
	</entry>
	
	<entry name="Linguaggio di markup">
		Insieme di regole che descrivono i meccanismi di rappresentazione (strutturali, semantici o presentazionali) di un testo.
	</entry>
	
	<entry name="Mailing list">
		Collezione di nomi ed indirizzi utilizzata per mandare messaggi multipli a diversi destinatari.
	</entry>

	<entry name="Map Chart">
		Questa tipologia di grafico è una mappa geografica con dati rappresentati in sovraimpressione. I dati possono essere rappresentati come forme geometriche colorate, come icone o come testo. Generalmente le forme geometriche e le icone possono essere selezionabili, così come la mappa può essere ingrandita o rimpicciolita a discrezione dell’utente. Le rappresentazioni dei dati cambiano contestualmente alla porzione di mappa visualizzata.
	</entry>
	
	<entry name="Mercurial">
		Software multipiattaforma di controllo di versione distribuito, utilizzabile da riga di comando.
	</entry>
	
	<entry name="Middleware">
		Insieme di programmi informatici che fungono da intermediari tra diverse applicazioni e componenti software. Sono spesso utilizzati come supporto per sistemi distribuiti complessi.
	</entry>

	<entry name="Milestone">
		In italiano "Pietra miliare". Questo termine indica importanti traguardi in termini di tempo o di attività, che sanciscono una metrica di avanzamento del progetto.
	</entry>
	
	<entry name="Modello incrementale">
		Per modello incrementale o modello iterativo, nell'ambito dell'ingegneria del software, si intende un modello di sviluppo di un progetto software basato sulla successione dei seguenti passi principali: pianificazione, analisi dei requisiti, progetto,    implementazione, verifica, valutazione.
		Questo ciclo può essere ripetuto diverse volte fino a che la valutazione del prodotto diviene soddisfacente rispetto ai requisiti richiesti.
	</entry>

	<entry name="Monospace">
		Stile di scrittura che utilizza i caratteri monospaziati, cioè quei caratteri che, indipendentemente dalla lettera, occupano la stessa larghezza.
	</entry>
	
	<entry name="Node.js">
		Node.js è un framework event-driven per il motore JavaScript V8, su piattaforme UNIX like, si tratta cioè di un framework relativo all'utilizzo server-side di JavaScript.
	</entry>
	
	<entry name="Norris">
		Norris è l'oggetto del capitolato e quindi di questo progetto. Norris è un framework che permette di raccogliere dati provenienti da sorgenti arbitrarie e realizzarli come grafici in modo semplice e veloce. Norris fornisce API con le quali è possibile configurare la veste grafica dei dati e indicare diversi metodi di aggiornamento dei dati stessi.
	</entry>
	
	<entry name="Open source">
		Software di cui gli autori (più precisamente i detentori dei diritti) rendono pubblico il codice sorgente, permettendo a programmatori indipendenti di apportarvi modifiche. Questa possibilità è regolata tramite l'applicazione di apposite licenze d'uso.
	</entry>
	
	<entry name="Paradigma Object Oriented">
		In ingegneria del software, l'espressione paradigma object-oriented si riferisce a un insieme di concetti introdotti dai linguaggi di programmazione orientati agli oggetti e in seguito estesi a numerosi altri contesti della information technology. Concetti fondamentali di questo paradigma sono: la classe, l'oggetto, l'incapsulamento, l'ereditarietà e il polimorfismo.
	</entry>
	
	<entry name="Pattern">
		Con questo termine, nei documenti del progetto e in generale nell'ambito dell'ingegneria, si indica uno schema di progetto.
	</entry>
	
	<entry name="PDCA">
		Il "Plan-Do-Check-Act", detto anche Ciclo di Deming o Ciclo di Miglioramento Continuo, è un metodo che permette di perseguire un continuo miglioramento della qualità nei processi.
	</entry>

	<entry name="PDF">
		Il Portable Document Format è un formato sviluppato da Adobe Systems per la rappresentazione di documenti in modo indipendente dall'hardware e dal software utilizzati per visualizzarli o generarli.
	</entry>

	<entry name="PNG">
		Il Portable Network Graphics è un formato per la memorizzazione di immagini.
	</entry>
	
	<entry name="Procedura">
		Funzione che raggruppa al suo interno una sequenza di istruzioni. Una procedura è chiamabile più volte all'interno di un programma, permettendo così il riuso del codice e facilitando la manutenibilità dello stesso.
	</entry>
	
	<entry name="Prodotto">
		Nei documenti del progetto Norris, il termine "prodotto" indica il risultato di una attività, sia esso un documento, del codice sorgente o un qualsiasi risultato verificabile.
	</entry>
	
	<entry name="Repository">
		Un repository è un ambiente di un sistema informativo in cui vengono gestiti metadati attraverso tabelle relazionali. Il repository utilizzato dal gruppo Kaizen-Team è fornito dalla piattaforma GitHub.
	</entry>

	<entry name="Socket.io">
		Libreria \insglo{JavaScript} per applicazioni web real-time. Utilizza il protocollo \insglo{WebSocket} per implementare una comunicazione bidirezionale orientata agli eventi.
	</entry>

	<entry name="Script">
		Piccolo programma sequenziale, scritto in linguaggio interpretato, destinato all'automazione di attività ripetitive.
	</entry>

	<entry name="Server">
		Componente o sottosistema informatico di elaborazione che fornisce, a livello logico e a livello fisico, un qualunque tipo di servizio ad altre componenti (tipicamente chiamate \insglo{client}, cioè "cliente") che ne fanno richiesta attraverso una rete di computer, all'interno di un sistema informatico o direttamente in locale su un computer.
	</entry>
	
	<entry name="Software">
		Un software, in informatica, è l'informazione o le informazioni utilizzate da uno o più sistemi informatici e memorizzate su uno o più supporti informatici. Tali informazioni possono essere quindi rappresentate da uno o più programmi, oppure da uno o più dati, oppure da una combinazione delle due.
	</entry>

	<entry name="Table">
		La rappresentazione dei dati a tabella è costituita da una comune griglia sulla quale vengono visualizzati i valori. Nella prima riga, o header, vengono messe le etichette esplicative del tipo di dato colonnato, mentre nelle varie righe sono elencati i vari dati.
	</entry>
	
	<entry name="TCP">
		Acronimo di Transfer Control Protocol, un protocollo di rete che si occupa di controllo di trasmissione, rendendo affidabile la comunicazione dati in rete tra mittente e destinatario.
	</entry>

	<entry name="Team">
		Col termine Team, o con la sua traduzione italiana (Gruppo), nei documenti del progetto Norris si intendono le persone che fanno parte del Kaizen-Team.
	</entry>
	
	<entry name="Ticket">
		Associazione tra una persona e un obbligo o attività.
	</entry>
	
	<entry name="UML">
		L'"Unified Modelling Language" è un linguaggio di modellazione e specifica basato sul paradigma object-oriented. Attraverso tale linguaggio è possibile definire i diagrammi dei casi d'uso, delle attività e delle classi.
	</entry>
	
	<entry name="Walkthrough">
		Walkthrough è una forma di analisi statica di un prodotto non compilabile, o del quale non si vuole o non si può fare un'analisi dinamica, che prevede un esame accurato dell'oggetto dell'analisi alla ricerca di ogni possibile errore. Questa tecnica viene applicata quando non si ha un'idea precisa della tipologia di errori che possono verificarsi.
	</entry>
	<entry name="Web Socket">
		Tecnologia web che fornisce canali di comunicazione bidirezionali attraverso una singola connessione \insglo{TCP}. L'\insglo{API} del WebSocket è stata standardizzata dal W3C e il protocollo WebSocket è stato standardizzato dall'IETF.
	</entry>
	
	<entry name="WhatsApp">
		Applicazione di messaggistica istantanea multipiattaforma per smartphone. Oltre allo scambio di messaggi testuali, permette di inviare immagini, video, file audio e la propria posizione.
	</entry>

	<entry name="XML">
		XML è un linguaggio di markup, ovvero un linguaggio che permette di marcare sintatticamente degli elementi contenuti in un documento.
	</entry>
	
</terms>
